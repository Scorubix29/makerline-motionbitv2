{"entries":[{"timestamp":1750474376234,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"KmOQ:iUSt$D0zsE__RBM\" x=\"0\" y=\"0"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":133,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"CLfyUomzAJwr64Lr_:.|\" x=\"205\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":48,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=\"#FF8800\" weight=100 icon=\"\\uf11b\" block=\"MakerLine\"\nnamespace MakerLine {\n\n    export enum SensorPosition {\n        //% block=\"Left\"\n        Left,\n        //% block=\"Mid-Left\"\n        MidLeft,\n        //% block=\"Center\"\n        Center,\n        //% block=\"Mid-Right\"\n        MidRight,\n        //% block=\"Right\"\n        Right\n    }\n\n    export enum MotorChannel {\n        //% block=\"M1\"\n        M1,\n        //% block=\"M2\"\n        M2,\n        //% block=\"M3\"\n        M3,\n        //% block=\"M4\"\n        M4\n    }\n\n    let pinMap: DigitalPin[] = [\n        DigitalPin.P13,  // Left\n        DigitalPin.P15,  // Mid-Left\n        DigitalPin.P14,  // Center\n        DigitalPin.P16,  // Mid-Right\n        DigitalPin.P1    // Right\n    ]\n\n    let leftMotor = MotorChannel.M1\n    let rightMotor = MotorChannel.M2\n\n    //% block=\"set left motor to $left and right motor to $right\"\n    //% group=\"Setup\"\n    export function setMotors(left: MotorChannel, right: MotorChannel): void {\n        leftMotor = left\n        rightMotor = right\n    }\n\n    //% block=\"sensor $pos detects black line\"\n    //% group=\"Sensors\"\n    export function sensorDetectsLine(pos: SensorPosition): boolean {\n        return pins.digitalReadPin(pinMap[pos]) == 0\n    }\n\n    //% block=\"move forward at speed $speed\"\n    //% group=\"Motion\"\n    export function moveForward(speed: number): void {\n        motionbit.runMotor(leftMotor, MotionBitMotorDirection.Forward, speed)\n        motionbit.runMotor(rightMotor, MotionBitMotorDirection.Forward, speed)\n    }\n\n    //% block=\"turn left at speed $speed\"\n    //% group=\"Motion\"\n    export function turnLeft(speed: number): void {\n        motionbit.brakeMotor(leftMotor)\n        motionbit.runMotor(rightMotor, MotionBitMotorDirection.Forward, speed)\n    }\n\n    //% block=\"turn right at speed $speed\"\n    //% group=\"Motion\"\n    export function turnRight(speed: number): void {\n        motionbit.runMotor(leftMotor, MotionBitMotorDirection.Forward, speed)\n        motionbit.brakeMotor(rightMotor)\n    }\n\n    //% block=\"stop motors\"\n    //% group=\"Motion\"\n    export function stopMotors(): void {\n        motionbit.brakeMotor(leftMotor)\n        motionbit.brakeMotor(rightMotor)\n    }\n\n    //% block=\"follow line at speed $speed\"\n    //% group=\"Line Following\"\n    export function followLine(speed: number): void {\n        if (sensorDetectsLine(SensorPosition.Center)) {\n            moveForward(speed)\n        } else if (sensorDetectsLine(SensorPosition.MidLeft)) {\n            turnLeft(speed)\n        } else if (sensorDetectsLine(SensorPosition.MidRight)) {\n            turnRight(speed)\n        } else {\n            stopMotors()\n        }\n    }\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":2653,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[1,"new "],[0,"maker"],[-1,"line-motionbitv2\",\n    \"version\": \"0.0.0"],[0,"\",\n "]],"start1":11,"start2":11,"length1":53,"length2":17},{"diffs":[[0,"*\",\n"],[-1,"        \"motionbit\": \"github:CytronTechnologies/pxt-motionbit\",\n"],[0,"    "]],"start1":89,"start2":89,"length1":72,"length2":8},{"diffs":[[0,": [\n"],[-1,"        \"README.md\",\n"],[0,"    "]],"start1":159,"start2":159,"length1":29,"length2":8},{"diffs":[[0,".ts\""],[-1,"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"public\": true,\n    \"targetVersions\": {\n        \"target\": \"7.0.61\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":199,"start2":199,"length1":251,"length2":65}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1750474376233,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"new maker\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1750474526901}